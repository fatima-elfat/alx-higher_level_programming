The ``100-matrix_mul.py`` module
============================

Using ``100-matrix_mul``
---------------------
>>> matrix_mul = __import__('100-matrix_mul').matrix_mul
>>> print(matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]]))
[[7, 10], [15, 22]]
>>> print(matrix_mul([[1, 2]], [[3, 4], [5, 6]]))
[[13, 16]]
>>> print(matrix_mul([[-2.0, -3.0]], [[-2.0], [-4.0]]))
[[16.0]]
>>> m_a = [{}]
>>> m_b = [[1, 2, 3], [4, 5, -6]]
>>> print(matrix_mul(m_a, m_b))
Traceback (most recent call last):
...
TypeError: m_a must be a list of lists
>>> print(matrix_mul(m_b, m_a))
Traceback (most recent call last):
...
TypeError: m_b must be a list of lists
>>> m_a = [[]]
>>> m_b = [[2, 0], [1, 2]]
>>> print(matrix_mul(m_a, m_b))
Traceback (most recent call last):
...
ValueError: m_a can't be empty
>>> print(matrix_mul(m_b, m_a))
Traceback (most recent call last):
...
ValueError: m_b can't be empty
>>> m_a = [[1, 2], [1, 2]]
>>> m_b = [[1, 2], [1, 2, 3, 4]]
>>> print(matrix_mul(m_b, m_a))
Traceback (most recent call last):
...
TypeError: each row of m_a must should be of the same size
>>> print(matrix_mul(m_a, m_b))
Traceback (most recent call last):
...
TypeError: each row of m_b must should be of the same size
>>> m_b = [["hi"], ["hey"]]
>>> print(matrix_mul(m_a, m_b))
Traceback (most recent call last):
...
TypeError: m_b should contain only integers or floats
